"""initial migration

Revision ID: eab2c1a16548
Revises: 
Create Date: 2024-11-27 00:56:21.037341

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'eab2c1a16548'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('spotify_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('spotify_token', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('spotify_refresh_token', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('token_expires_at', sa.DateTime(), nullable=True),
    sa.Column('display_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('spotify_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('spotify_image_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_spotify_sync', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('spotify_id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('connections',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('connected_user_id', sa.Uuid(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('overall_compatibility', sa.Integer(), nullable=True),
    sa.Column('compatibility_breakdown', sa.JSON(), nullable=True),
    sa.Column('shared_genres', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('shared_artists', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('shared_tracks', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['connected_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mood_rooms',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('mood_tags', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('playlist_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('music_profiles',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('top_artists', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('top_tracks', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('genres', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('favorite_decades', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('preferred_genres', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('discovery_preferences', sa.JSON(), nullable=True),
    sa.Column('listening_history', sa.JSON(), nullable=True),
    sa.Column('energy_score', sa.Float(), nullable=True),
    sa.Column('danceability_score', sa.Float(), nullable=True),
    sa.Column('diversity_score', sa.Float(), nullable=True),
    sa.Column('obscurity_score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('playlists',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('public', sa.Boolean(), nullable=False),
    sa.Column('spotify_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('tracks', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_playlists_spotify_id'), 'playlists', ['spotify_id'], unique=True)
    op.create_index(op.f('ix_playlists_user_id'), 'playlists', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_playlists_user_id'), table_name='playlists')
    op.drop_index(op.f('ix_playlists_spotify_id'), table_name='playlists')
    op.drop_table('playlists')
    op.drop_table('music_profiles')
    op.drop_table('mood_rooms')
    op.drop_table('connections')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
